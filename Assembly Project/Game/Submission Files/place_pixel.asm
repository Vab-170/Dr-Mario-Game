place_virus:
# Registers Used in function:
# $s1 - the register that saves the return address
# $a1 - holds the random x value or the column within the range
# $s7 - holds the random x value because $a1 has to get the random y value
# $a2 - holds the random y value or row within the range
# $a0 - holds the return value of the random_in_range fxn
# $t0 - holds total grid width or 32 pixels for me
# $t1 - holds the color generated by the load_color fxn
# $t2 - I think this holds the ADDR_DSPL
# $t3 - holds column index
# $t4 - base grid address
# $t5 - holds the depiction of the pixel
# $t6 - final grid address
# $t7 - holds the red color address for comparison
# $t8 - holds the blue color address for comparison
# $t9 - holds the yellow color address for comparison
    # Save return address
    move $s1, $ra

    # Generate random X-coordinate (3 to 18)
    li $a1, 16             # Load the upper bound (18 - 3 = 15) in $a1
    jal random_in_range    # Generate random number (0 <= $a0 < 15)
    li $t0, 1              # Load the lower bound in $t0
    add $a1, $a0, $t0
    
    move $s7, $a1          # Move the x-val to $s7 because $a1 is needed for generating y value

    # Generate random Y-coordinate (15 to 31)
    li $a1, 15              # Load the upper bound (31 - 15 = 16) in $a1
    jal random_in_range     # Generate random number (0 <= $v0 < 17)
    li $t0, 16              # Load the lower bound in $t0
    add $a2, $a0, $t0
    
    move $a1, $s7           # Move the x value back into $a1
    
    jal draw_pixel

    move $ra, $s1
    
    # Calculate the address of the grid cell
    la $t4, grid
    li $t0, 32             # Grid width
    mul $t3, $a2, $t0      # Row offset
    add $t3, $t3, $a1      # Add column index
    add $t6, $t4, $t3      # Final grid cell address

    # Loading pixel depiction based on color loaded by random generator
    lw $t7, red_col
    beq $t1, $t7, red_virus
    
    lw $t7, blue_col
    beq $t1, $t7, blue_virus
    
    lw $t7, yellow_col
    beq $t1, $t7, yellow_virus
    
red_virus:
    li $t5, 1
    sb $t5, 0($t6)         # Store the pixel depiction in $t6
    jr $ra
    
blue_virus:
    li $t5, 2
    sb $t5, 0($t6)         # Store the pixel depiction in $t6
    jr $ra
    
yellow_virus:
    li $t5, 3
    sb $t5, 0($t6)         # Store the pixel dpeiction in $t6
    jr $ra